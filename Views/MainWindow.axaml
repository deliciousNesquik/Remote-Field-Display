<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="using:RFD.ViewModels"
        xmlns:controls="using:RFD.Controls"
        xmlns:converters="using:RFD.Converters"
        xmlns:usercontrols="using:RFD.UserControls"
        x:Class="RFD.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Background="{DynamicResource GradientBackground}"
        FontFamily="Helvetica"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaTitleBarHeightHint="-1"
        mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="720">
	
	<Design.DataContext>
		<vm:MainWindowViewModel/>
	 </Design.DataContext>
	
	<!--Подключение всех ресурсов, необходимых для отрисовки и логики окна-->
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary>
					<converters:BoolToBrushConverter x:Key="BoolToBrushConverter" />
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Window.Resources>

	
	<Border Name="MainBorder" Margin="0 0 0 0" BorderThickness="1" BorderBrush="{DynamicResource BorderColor}">
		
		<Grid RowDefinitions="Auto, *">
			
			<!--Кастомная верхняя панель управления, выполненая в стиле приложений Windows
			Иконка приложения, название приложения, кнопка свернуть, кнопка разворачивания, кнопка закрытия приложения-->
			<Grid Grid.Row="0" ColumnDefinitions="*, Auto" Height="30" Background="{DynamicResource FocusingColor}">
				
				<!--Заголовок приложения-->
				<StackPanel Grid.Column="0" Orientation="Horizontal">
					<Image Source="{SvgImage ../Assets/app-icon.svg}"></Image>
					<Label VerticalAlignment="Center" Foreground="White" FontWeight="Medium" Margin="5 0 0 0">RFD "Монитор бурильщика"</Label>
				</StackPanel>
				
				<!--Кнопки для управления приложением-->
				<StackPanel Grid.Column="1" Orientation="Horizontal">
					<Button Name="WindowMinimizeButton" Classes="windowManipulation" Click="WindowMinimizeButton_OnClick">
						<Svg Path="../Assets/window-minimize.svg"/>
					</Button>
					<Button Name="WindowMaximizeButton" Classes="windowManipulation" Click="WindowMaximizeButton_OnClick">
						<Svg Path="../Assets/window-maximize.svg"/>
					</Button>
					<Button Name="WindowCloseButton" Classes="close" Click="WindowCloseButton_OnClick">
						<Svg Path="../Assets/window-close.svg"/>
					</Button>
				</StackPanel>
			</Grid>
			
			
			
			<Grid Grid.Row="1" RowDefinitions="*" ColumnDefinitions="*">
				<!--Вспомогательный элемент, позволяющий затемнять главный экран
				от чего появляется приятный эффект и контраст модульного окна повышается на фоне главного-->
				<Border Name="BlackoutWindow"
				        IsVisible="{Binding IsModalWindowOpen}"
				        Background="#80000000"
				        ZIndex="1000"
				        HorizontalAlignment="Stretch"
				        VerticalAlignment="Stretch">
					
					
					<!--DataTemplate для всех модальных окон-->
					<ContentControl Content="{Binding CurrentUserControl}">
						<ContentControl.DataTemplates>
							<DataTemplate DataType="{x:Type usercontrols:AutomaticConnectingDialog}">
								<usercontrols:AutomaticConnectingDialog Background="{DynamicResource GradientBackground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							</DataTemplate>
							<DataTemplate DataType="{x:Type usercontrols:ManualConnectionDialog}">
								<usercontrols:ManualConnectionDialog Background="{DynamicResource GradientBackground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							</DataTemplate>
							
							<!--При создании нового модульного окна, необходимо вписать сюда шаблон для его отображения-->
							
						</ContentControl.DataTemplates>
					</ContentControl>
				</Border>
				
				
				<!--Основное содержимое главного окна-->
				<Grid RowDefinitions="Auto, *">
					
					<!--Вспомогательный элемент, позволяющий размывать(блюрить) главный экран
					от чего появляется приятный эффект и контраст модульного окна повышается на фоне главного-->
					<Grid.Effect>
						<BlurEffect Radius="{Binding BlurRadius}"/>
					</Grid.Effect>
					
					<!--Блок меню-->
					<DockPanel Grid.Row="0" Grid.ColumnSpan="2">
						<Menu DockPanel.Dock="Left">
							
							<MenuItem Header="Подключение" Classes="main">
								<MenuItem Classes="sub"
								          Header="Автоматическое подключение" 
								          Command="{Binding OpenAutomaticConnectingCommand}"/>
								<MenuItem Classes="sub"
								          Header="Ручное подключение" 
								          Command="{Binding OpenManualConnectingCommand}"/>
								<MenuItem Classes="sub"
								          Header="Отключиться"
								          Command="{Binding DisconnectCommand}"/>
							</MenuItem>
							
							<MenuItem Classes="main"
							          Header="Настройки"
							          Command="{Binding SettingsCommand}">
							</MenuItem>
							
							<MenuItem Header="Окна" Classes="main">
								<MenuItem Classes="sub"
								          Header="Мишень" 
								          Command="{Binding TargetVisibleCommand}"/>
								<MenuItem Classes="sub" 
								          Header="Информация" 
								          Command="{Binding InformationVisibleCommand}"/>
								<MenuItem Classes="sub" 
								          Header="Параметры" 
								          Command="{Binding ParametersVisibleCommand}"/>
								<MenuItem Classes="sub"
								          Header="Статусы" 
								          Command="{Binding StatusesVisibleCommand}"/>
								<MenuItem Classes="sub"
								          Header="Состояния" 
								          Command="{Binding ConditionsVisibleCommand}"/>
							</MenuItem>
							
							<MenuItem Header="Помощь" Classes="main">
								<MenuItem Classes="sub"
								          Header="Руководство пользователя" 
								          Command="{Binding UsersGuideCommand}"/>
								
								<MenuItem Classes="sub"
								          Header="О приложении" 
								          Command="{Binding AboutApplicationCommand}"/>
							</MenuItem>
						</Menu>
						
						<StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Center">
							<Label 
								Content="{Binding IpAddress, 
								UpdateSourceTrigger=PropertyChanged, 
								StringFormat={}IP-Адрес: {0}}" 
								
								Foreground="{DynamicResource ForegroundColor02}" 
								FontWeight="650" 
								VerticalAlignment="Center"/>
							
							<Ellipse 
								Fill="{Binding ConnectionStatus, 
								UpdateSourceTrigger=PropertyChanged, 
								Converter={StaticResource BoolToBrushConverter}}" 
								Margin="0 0 10 0" Width="12" Height="12" VerticalAlignment="Center"/>
						</StackPanel>
					</DockPanel>
					<Border Grid.Row="0" Grid.Column="0" BorderBrush="Gray" BorderThickness="0 0 0 1"/>
					
					
					
					<Grid Grid.Row="1" Grid.Column="0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{Binding LeftColumnWidth}" />
							<ColumnDefinition Width="{Binding RightColumnWidth}" />
						</Grid.ColumnDefinitions>
						
						<!-- Левая колонка -->
						<Grid Grid.Column="0" Margin="20" RowDefinitions="*, Auto" IsVisible="{Binding AreLeftElementsVisible}">
							<Grid Grid.Row="0" IsVisible="{Binding IsTargetDisplayed}">
								<Label Content="Мишень:" Classes="section" HorizontalAlignment="Left" VerticalAlignment="Top" />
        
								<Viewbox Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="20">
									<Grid>
										<!-- Размеры 450x450 задают базовый круг -->
										<Ellipse Fill="{DynamicResource FocusingColor}" Width="450" Height="450" />
									</Grid>
								</Viewbox>
							</Grid>

							<StackPanel Grid.Row="1" IsVisible="{Binding IsParametersDisplayed}">
								<Label Content="Параметры:" Classes="section" />
								<Label Content="{Binding MagneticDeclination, StringFormat={}Магнитное склонение: {0:f2}}" />
								<Label Content="{Binding ToolfaceOffset, StringFormat={}Смещение поверхности инструмента: {0:f2}}" />
							</StackPanel>
						</Grid>

						<!-- Правая колонка -->
						<Grid Grid.Column="1"  IsVisible="{Binding AreRightElementsVisible}">
						    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
						        <StackPanel Margin="20">
						            <!-- Информация о бурении -->
						            <StackPanel IsVisible="{Binding IsInformationDisplayed}">
						                <Label Content="Информация:" Classes="section"/>
						                <ItemsControl ItemsSource="{Binding InfoBlockList}">
						                    <ItemsControl.ItemsPanel>
						                        <ItemsPanelTemplate>
						                            <WrapPanel Orientation="Horizontal"/>
						                        </ItemsPanelTemplate>
						                    </ItemsControl.ItemsPanel>
						                    <ItemsControl.ItemTemplate>
						                        <DataTemplate>
						                            <controls:InfoBox Title="{Binding Title}" Content="{Binding Content}" />
						                        </DataTemplate>
						                    </ItemsControl.ItemTemplate>
						                </ItemsControl>
						            </StackPanel>

						            <!-- Статусы бурения -->
						            <StackPanel Margin="0 20 0 0" Orientation="Vertical" IsVisible="{Binding IsStatusesDisplayed}">
						                <Label Content="Статусы:" Classes="section" />
						                <ItemsControl ItemsSource="{Binding InfoStatusList}">
						                    <ItemsControl.ItemsPanel>
						                        <ItemsPanelTemplate>
						                            <WrapPanel Orientation="Horizontal"/>
						                        </ItemsPanelTemplate>
						                    </ItemsControl.ItemsPanel>
						                    <ItemsControl.ItemTemplate>
						                        <DataTemplate>
						                            <controls:StatusBox Header="{Binding Header}" Status="{Binding Status}" />
						                        </DataTemplate>
						                    </ItemsControl.ItemTemplate>
						                </ItemsControl>
						            </StackPanel>

						            <!-- Состояния бурения -->
						            <StackPanel Margin="0 20 0 0" IsVisible="{Binding IsConditionsDisplayed}">
						                <Label Content="Состояния:" Classes="section" />
						                <ItemsControl ItemsSource="{Binding InfoStatusList}">
						                    <ItemsControl.ItemsPanel>
						                        <ItemsPanelTemplate>
						                            <WrapPanel Orientation="Horizontal"/>
						                        </ItemsPanelTemplate>
						                    </ItemsControl.ItemsPanel>
						                    <ItemsControl.ItemTemplate>
						                        <DataTemplate>
						                            <controls:StatusBox Header="{Binding Header}" Status="{Binding Status}" />
						                        </DataTemplate>
						                    </ItemsControl.ItemTemplate>
						                </ItemsControl>
						            </StackPanel>
						        </StackPanel>
						    </ScrollViewer>
						</Grid>

						
					</Grid>
				</Grid>
			</Grid>
		</Grid>
	</Border>
</Window>
